<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

<global-method-security pre-post-annotations="enabled" />

	<http use-expressions="true" access-denied-page="/accessdenied">
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/employee/**" access="isAuthenticated()" />
		<intercept-url pattern="/sport/**" access="isAuthenticated()" />
		<intercept-url pattern="/table_pages/**" access="isAuthenticated()" />
		<!-- Allow all other requests. In a real application you should adopt a 
			whitelisting approach where access is not allowed by default -->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-page="/login" default-target-url="/index" authentication-failure-url="/loginfailed"/>
		
		<logout logout-success-url="/logout" />
		
		<remember-me />
		<!-- Uncomment to enable X509 client authentication support <x509 /> -->
		<!-- Uncomment to limit the number of sessions a user can have -->
		<!-- <session-management invalid-session-url="/timeout">
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management> -->
	</http>
	
	<authentication-manager>
		<authentication-provider user-service-ref="userService">
			<!-- <password-encoder hash="md5" /> -->
		</authentication-provider>
	</authentication-manager>

</beans:beans>